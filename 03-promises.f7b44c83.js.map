{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SACtBF,EAAOE,cAAc,kBACtBF,EAAOE,cAAc,iBACnBF,EAAOE,cAAc,mBACxBF,EAAOE,cAAc,mBAGnC,SAASC,EAAWC,EAAUC,GAE5B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUQ,QAAAP,IAEpBG,EAAO,CAAEJ,WAAUQ,QAAAP,MAEpBA,MAGPL,EAAOa,iBAAiB,UACxB,SAAkBC,GAChBA,EAAMC,iBAKN,IAJA,IAAgCC,EAAAF,EAAMG,OAAOC,SAArCC,EAAwBH,EAAxBG,OAAQC,EAAgBJ,EAAhBI,KAAMC,EAAUL,EAAVK,MAClBC,EAAcC,OAAOJ,EAAOK,OAC5BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAaH,OAAOF,EAAMG,OACrBG,EAAQ,EAAGA,EAAQL,EAAaK,GAAS,EAChDxB,EAAWwB,EAAOD,GACfE,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAU0B,EAAOD,EAAPjB,QACjBmB,EAAAjC,GAASkC,OAAOC,QACd,uBAAwCC,OAAf9B,EAAS,QAAc8B,OAARJ,EAAQ,UAGnDK,OAAM,SAAAN,G,IAAGzB,EAAQyB,EAARzB,SAAUgC,EAAOP,EAAPjB,QAClBmB,EAAAjC,GAASkC,OAAOK,QACd,sBAAqCH,OAAf9B,EAAS,QAAc8B,OAARE,EAAQ,UAGnDV,GAAcD,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEL = document.querySelector('.form');\nconst delayEL = formEL.querySelector('[name=\"delay\"]');\nconst stepEL = formEL.querySelector('[name=\"step\"]');\nconst amountEL = formEL.querySelector('[name=\"amount\"]');\nconst btnEL = formEL.querySelector('[type=\"submit\"]');\n\n\nfunction getPromise(position, delayEL) {\n \n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delayEL });\n      } else {\n        reject({ position, delayEL });\n      }\n    }, delayEL);\n  });\n}\nformEL.addEventListener('submit', onSubmit);\nfunction onSubmit(event) {\n  event.preventDefault();\n  const { amount, step, delay } = event.target.elements;\n  let amountValue = Number(amount.value);\n  let stepValue = Number(step.value);\n  let delayValue = Number(delay.value);\n  for (let index = 0; index < amountValue; index += 1) {\n    getPromise(index, delayValue)\n      .then(({ position, delayEL}) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delayEL}ms`\n        );\n      })\n      .catch(({ position, delayEL}) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delayEL}ms`\n        );\n      });\n    delayValue += stepValue;\n  }\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEL","document","querySelector","$ce04d3a99e08e73b$var$getPromise","position","delayEL1","Promise","resolve","reject","setTimeout","Math","random","delayEL","addEventListener","event","preventDefault","_elements","target","elements","amount","step","delay","amountValue","Number","value","stepValue","delayValue","index","then","param","delayEL2","$parcel$interopDefault","Notify","success","concat","catch","delayEL3","failure"],"version":3,"file":"03-promises.f7b44c83.js.map"}